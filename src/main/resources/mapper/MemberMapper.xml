<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "https://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.jolipjo.lovebridge.domain.member.dao.MemberMapper">


<!--    ================= 파라미터 ==================== -->
    <parameterMap id="Member" type="com.jolipjo.lovebridge.domain.member.entity.Member">
        <parameter property="email"/>
        <parameter property="password"/>
        <parameter property="nickname"/>
        <parameter property="birth"/>
        <parameter property="gender"/>
        <parameter property="marketingAgree"/>
    </parameterMap>


    <parameterMap id="SecretCode" type="com.jolipjo.lovebridge.domain.member.entity.SecretCode">
        <parameter property="couple_id"/>
        <parameter property="secret_code"/>
        <parameter property="m_member_id"/>
        <parameter property="f_member_id"/>
    </parameterMap>

    <parameterMap id="MypageRequestDTO" type="com.jolipjo.lovebridge.domain.member.dto.MypageRequestDTO">
        <parameter property="id"/>
        <parameter property="nickname"/>
        <parameter property="email"/>
    </parameterMap>

    <parameterMap id="ChangePasswordRequestDTO" type="com.jolipjo.lovebridge.domain.member.dto.ChangePasswordRequestDTO">
        <parameter property="id"/>
        <parameter property="oldPassword"/>
        <parameter property="newPassword"/>
    </parameterMap>


    <!--    ================= 반환값 ==================== -->
    <resultMap id="SecretCode" type="com.jolipjo.lovebridge.domain.member.entity.SecretCode">
        <id column="couple_id" property="couple_id"/>
        <result column="secret_code" property="secret_code"/>
        <result column="fk_m_member_id" property="m_member_id"/>
        <result column="fk_f_member_id" property="f_member_id"/>
    </resultMap>

    <resultMap id="Member" type="com.jolipjo.lovebridge.domain.member.entity.Member">
        <id column="id" property="id"/>
        <result column="secretId" property="secretId"/>
        <result column="email" property="email"/>
        <result column="nickname" property="nickname"/>
        <result column="password" property="password"/>
        <result column="role" property="role"/>
        <result column="birth" property="birth"/>
        <result column="gender" property="gender"/>
    </resultMap>

    <resultMap id="MypageResponseDTO" type="com.jolipjo.lovebridge.domain.member.dto.MypageResponseDTO">
        <result column="secret_code" property="secretCode"/>
        <result column="nickname" property="nickname"/>
        <result column="email" property="email"/>
    </resultMap>



<!--    회원가입-->
    <insert id="join" parameterMap="Member" useGeneratedKeys="true">
        INSERT INTO member
        (
            email,
            nickname,
            password,
            role,
            birth,
            gender
        )
        VALUES
        (
            #{email},
            #{nickname},
            #{password},
            #{role},
            #{birth},
            #{gender}
        )
    </insert>

<!--    시크릿 코드 생성-->
    <insert id="createSecretCode" parameterMap="SecretCode" useGeneratedKeys="true">
        INSERT INTO COUPLE
        (
            secret_code,
            fk_m_member_id,
            fk_f_member_id
        )
        VALUES
        (
            #{secret_code},
            #{m_member_id},
            #{f_member_id}
        )
    </insert>

    <select id="findSecretByCode" parameterType="string" resultMap="SecretCode">
        SELECT
            couple_id,
            secret_code,
            fk_m_member_id,
            fk_f_member_id
        FROM
            COUPLE
        WHERE
            secret_code = #{code}
    </select>

    <update id="updateSecretCode" parameterMap="SecretCode">
        UPDATE
            COUPLE
        SET
            secret_code = #{secret_code},
            fk_m_member_id = #{m_member_id},
            fk_f_member_id = #{f_member_id}
        WHERE
            couple_id = #{couple_id}
    </update>

<!--    사용자 ID로 시크릿 코드 정보 추출-->
    <select id="findSecretCodeByMemberId" parameterType="long" resultMap="SecretCode">
        SELECT
            couple_id,
            secret_code,
            fk_m_member_id,
            fk_f_member_id
        FROM
            COUPLE
        WHERE
            fk_m_member_id = #{memberId}
        OR
            fk_f_member_id = #{memberId}
    </select>

<!--    시크릿코드 id와 연결된 사용자 검색-->
    <select id="findMembersBySecretCode" parameterType="String" resultMap="SecretCode">
        SELECT
            couple_id,
            secret_code,
            fk_m_member_id,
            fk_f_member_id
        FROM
            COUPLE
        WHERE
            secret_code = #{secretCode}
    </select>

<!--    나와 시크릿코드로 연결된 다른 사용자 검색-->
<!--    <select id="findMyPartner" parameterType="long" resultType="long">-->
<!--        SELECT-->
<!--            id-->
<!--        FROM-->
<!--            member-->
<!--        WHERE-->
<!--            id != #{memberId}-->
<!--        AND-->
<!--            secretId-->
<!--        IN-->
<!--            (-->
<!--            SELECT-->
<!--                secretId-->
<!--            FROM-->
<!--                member-->
<!--            WHERE-->
<!--                id = #{memberId}-->
<!--            )-->
<!--    </select>-->

    <select id="findByEmail" parameterType="String" resultMap="Member">
        SELECT
            id,
            secretId,
            email,
            nickname,
            password,
            role,
            birth,
            gender
        FROM
            member
        WHERE
            email = #{email}
    </select>

    <select id="getMypageInfo" parameterType="Long" resultMap="MypageResponseDTO">
        SELECT
            b.secret_code,
            a.nickname,
            a.email
        FROM
            member a
        LEFT JOIN
            COUPLE b
        ON
            b.fk_m_member_id = a.id
        OR
        b.fk_f_member_id = a.id
        WHERE
            a.id = #{memberId}
    </select>

    <update id="UpdateMemberInfo" parameterMap="MypageRequestDTO">
        UPDATE
            member
        SET
            nickname = #{nickname},
            email = #{email}
        WHERE
            id = #{id}
    </update>

    <select id="getPassword" parameterType="Long" resultType="String">
        SELECT
            password
        FROM
            member
        WHERE
            id = #{id}
    </select>

    <update id="changePassword" parameterMap="ChangePasswordRequestDTO">
        UPDATE
            member
        SET
            password = #{newPassword}
        WHERE
        id = #{id}
    </update>

<!--    <select id="findMyPartnerInfo" parameterType="Long" resultMap="Member">-->
<!--        SELECT-->
<!--            id,-->
<!--            secretId,-->
<!--            email,-->
<!--            nickname,-->
<!--            password,-->
<!--            role,-->
<!--            birth,-->
<!--            gender-->
<!--        FROM-->
<!--            member-->
<!--        WHERE-->
<!--        id = #{memberId}-->

<!--    </select>-->

    <select id="getMemberInfo" parameterType="Long" resultMap="Member">
        SELECT
            id,
            secretId,
            email,
            nickname,
            password,
            role,
            birth,
            gender
        FROM
            member
        WHERE
        id = #{memberId}
    </select>
</mapper>